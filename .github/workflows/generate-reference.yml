name: Reference generation

on:
  # Manual launch
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Release tag"
        required: true
      release_name:
        description: "Release name"
        required: true
      antares_tag:
        description: "Antares_Simulator solver tag"
        default: v8.0.3
        required: true
      antares_tests_tag:
        description: "Antares_Simulator_Tests_NR"
        default: v8.0.0
        required: true

jobs:
    release:
      runs-on: ubuntu-latest
      outputs:
        url: ${{ steps.create_release.outputs.upload_url }}
      steps:
        - name: Release creation
          uses: actions/create-release@v1
          id: create_release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.event.inputs.release_tag }}
            release_name: ${{ github.event.inputs.release_name }}
            body: |
              Antares_Simulator : ${{ github.event.inputs.antares_tag }}
              Antares_Simulator_Tests_NR : ${{ github.event.inputs.antares_tests_tag }}

    generation:
        runs-on: ${{ matrix.os }}
        needs: release
        strategy:
          matrix:
            subdir: [short-tests, medium-tests, long-tests-1, long-tests-2, valid-adq, valid-bind, valid-complex, valid-defaillance, valid-draft, valid-filter-outputs, valid-hydro, valid-hydroBind, valid-hydroPricing, valid-marginCost, valid-parallel, valid-thermal, valid-ts-gen-export]
            os: [ubuntu-latest, windows-latest]

        steps:
        - name: Checkout SimTest
          uses: actions/checkout@v2

        - name: Pre-requisites (Windows)
          if: ${{ startsWith(matrix.os, 'windows') }}
          run: choco install wget zip unzip --no-progress

        - name: Download Antares_Simulator archive (Ubuntu)
          if: ${{ startsWith(matrix.os, 'ubuntu') }}
          run: |
            ANTARES_TAG=${{ github.event.inputs.antares_tag }}
            wget https://github.com/AntaresSimulatorTeam/Antares_Simulator/releases/download/${{ github.event.inputs.antares_tag }}/antares-${ANTARES_TAG/v/}-Ubuntu-20.04.tar.gz -O antares_simulator.tar.gz

        - name: Download Antares_Simulator archive (Windows)
          if: ${{ startsWith(matrix.os, 'windows') }}
          run: |
            ANTARES_TAG=${{ github.event.inputs.antares_tag }}
            wget https://github.com/AntaresSimulatorTeam/Antares_Simulator/releases/download/${{ github.event.inputs.antares_tag }}/rte-antares-${ANTARES_TAG/v/}-installer-64bits.zip -O antares_simulator.zip
          shell: bash

        - name: Unpack Antares_Simulator, clean archive (Ubuntu)
          if: ${{ startsWith(matrix.os, 'ubuntu') }}
          run: |
            tar xf antares_simulator.tar.gz
            rm antares_simulator.tar.gz

        - name: Unpack Antares_Simulator, clean archive (Windows)
          if: ${{ startsWith(matrix.os, 'windows') }}
          run: |
            unzip -q antares_simulator.zip
            rm antares_simulator.zip

        - name: Download Antares_Simulator_Tests
          run: wget https://github.com/AntaresSimulatorTeam/Antares_Simulator_Tests_NR/releases/download/${{ github.event.inputs.antares_tests_tag }}/${{ matrix.batch }}.zip -O input.zip

        - name: Unpack test studies, clean archive
          run: |
            unzip -q input.zip
            rm input.zip

        - name: Generate results (Ubuntu)
          if: ${{ startsWith(matrix.os, 'ubuntu') }}
          run: |
            ANTARES_TAG=${{ github.event.inputs.antares_tag }}
            python3 scripts/generate_reference.py ${{ matrix.batch }} antares-${ANTARES_TAG/v/}-Ubuntu-20.04/bin

        - name: Generate results (Windows)
          if: ${{ startsWith(matrix.os, 'windows') }}
          run: |
            ANTARES_TAG=${{ github.event.inputs.antares_tag }}
            python3 scripts/generate_reference.py ${{ matrix.batch }} rte-antares-${ANTARES_TAG/v/}-installer-64bits/bin
          shell: bash

        - name: zip results
          run: zip -q -r results.zip ${{ matrix.batch }}

        - name: Upload .zip
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ github.token }}
          with:
            upload_url: ${{ needs.release.outputs.url }}
            asset_path: results.zip
            asset_name: ${{ matrix.batch }}-${{ github.event.inputs.antares_tag }}-${{ github.event.inputs.antares_tests_tag }}-${{ matrix.os }}.zip
            asset_content_type: application/octet-stream
